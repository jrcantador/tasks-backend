pipeline {
    agent any
    stages {
        stage ('build backend') {
            steps {
                sh 'mvn clean package -DskipTests=true'
            }
        }
        stage ('unit tests') {
            steps {
                sh 'mvn test'
            }
        }
        stage ('Sonar Analysis') {
            environment {
                scannerHome = tool 'SONAR_SCANNER'
            }
            steps {
                withSonarQubeEnv('SONAR_LOCAL') {
                    sh "${scannerHome}/bin/sonar-scanner -e -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://sonar:9000 -Dsonar.login=e534d812550c7be73bfc0ed0a238f7bd80e9af15 -Dsonar.java.binaries=target -Dsonar.coverage.exclusions=**/mvn/**,**/src/test/**,**/model/**,**Application.java"
                }
            }
        }
        stage ('deploy back') {     
            steps {  
                deploy adapters: [tomcat8(credentialsId: 'tomcat', path: '', url: 'http://tomcat:8000/')], contextPath: 'tasks-backend', war: 'target/tasks-backend.war'             
            }
        }
        stage ('API Test') {     
            steps {  
                dir('api-test') {
                    git credentialsId: 'Git', url: 'https://github.com/jrcantador/tasks-functional-tests.git'
                    sh 'mvn test'
                }
            }
        }
    }
    tools {
       maven "Maveb"       
    }
}